@layer data-attributes {
  :where([data-is='subgrid']) {
    display: grid;
    grid-template-columns: subgrid;
  }
}

@layer data-attributes {
  :where([data-is='app'], [data-is='container']) {

    & > :where([data-is='subgrid']) {

      & > * {
        grid-column: inner-start/inner-end;

        &:where([data-layout="breakout"]) {
          grid-column: breakout-start / breakout-end;
          padding-inline: max(var(--inner-gutter),
              calc((100% - var(--inner-column)) / 2));
        }

        &:where([data-layout="breakout-all"]) {
          grid-column: breakout-start/breakout-end;

          & > :where([data-layout='omit']) {
            padding-inline: max(var(--inner-gutter),
                calc((100% - var(--inner-column)) / 2));
          }
        }

        &:where([data-layout="breakout-content"]) {
          grid-column: breakout-start/breakout-end;

          & > *:not([data-layout='omit']) {
            padding-inline: max(var(--inner-gutter),
                calc((100% - var(--inner-column)) / 2));
          }
        }

        &:where([data-layout="expand"]) {
          grid-column: expand-start/expand-end;
          padding-inline: max(calc((100% - var(--inner-column)) / 2),
              calc((var(--inner-gutter) + var(--outter-gutter))));
        }

        &:where([data-layout="expand-all"]) {
          grid-column: expand-start/expand-end;

          & > :where([data-layout='omit']) {
            padding-inline: max(calc((100% - var(--inner-column)) / 2),
                calc((var(--inner-gutter) + var(--outter-gutter))));
          }
        }

        &:where([data-layout="expand-content"]) {
          grid-column: expand-start/expand-end;

          & > *:not([data-layout='omit']) {
            padding-inline: max(calc((100% - var(--inner-column)) / 2),
                calc((var(--inner-gutter) + var(--outter-gutter))));
          }
        }
      }
    }
  }
}