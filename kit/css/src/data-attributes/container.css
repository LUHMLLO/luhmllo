@layer data-attributes {
  :where([data-is="container"]) {
    --outter-gutter: var(--tmpl-outter_gutter);
    --outter-columns: 0;
    --inner-gutter: var(--tmpl-inner_gutter);
    --inner-column: 100rem;

    display: grid;
    container: container / inline-size;
    grid-auto-rows: min-content;
    grid-template-columns:
      [left-start] minmax(0, max-content) [left-end] 0 [expand-start] var(--outter-gutter) [breakout-start] minmax(var(--inner-gutter), 1fr) [inner-start] minmax(0, var(--inner-column)) [inner-end] minmax(var(--inner-gutter), 1fr) [breakout-end] var(--outter-gutter) [expand-end] 0 [right-start] minmax(0, max-content) [right-end];
    width: 100%;

    & > * {
      grid-column: inner-start/inner-end;

      &:where([data-layout="breakout"]) {
        grid-column: breakout-start / breakout-end;
        padding-inline: max(var(--inner-gutter),
            calc((100% - var(--inner-column)) / 2));
      }

      &:where([data-layout="breakout-all"]) {
        grid-column: breakout-start/breakout-end;

        & > :where([data-layout='omit']) {
          padding-inline: max(var(--inner-gutter),
              calc((100% - var(--inner-column)) / 2));
        }
      }

      &:where([data-layout="breakout-content"]) {
        grid-column: breakout-start/breakout-end;

        & > *:not([data-layout='omit']) {
          padding-inline: max(var(--inner-gutter),
              calc((100% - var(--inner-column)) / 2));
        }
      }

      &:where([data-layout="expand"]) {
        grid-column: expand-start/expand-end;
        padding-inline: max(calc((100% - var(--inner-column)) / 2),
            calc((var(--inner-gutter) + var(--outter-gutter))));
      }

      &:where([data-layout="expand-all"]) {
        grid-column: expand-start/expand-end;

        & > :where([data-layout='omit']) {
          padding-inline: max(calc((100% - var(--inner-column)) / 2),
              calc((var(--inner-gutter) + var(--outter-gutter))));
        }
      }

      &:where([data-layout="expand-content"]) {
        grid-column: expand-start/expand-end;

        & > *:not([data-layout='omit']) {
          padding-inline: max(calc((100% - var(--inner-column)) / 2),
              calc((var(--inner-gutter) + var(--outter-gutter))));
        }
      }
    }
  }
}