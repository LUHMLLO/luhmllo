// deno-lint-ignore-file
var n=class{dialog;options;dragState;isOpen=!1;boundHandlePointerDown=this.handlePointerDown.bind(this);boundHandlePointerMove=this.handlePointerMove.bind(this);boundHandlePointerEnd=this.handlePointerEnd.bind(this);boundHandleClickOutside=this.handleClickOutside.bind(this);boundHandleEscKey=this.handleEscKey.bind(this);boundHandleDelegatedClick=this.handleDelegatedClick.bind(this);constructor(t,e={}){this.dialog=t,this.options={targetAttribute:e.targetAttribute??"[data-toggle-modal]",dragThreshold:e.dragThreshold??100,dragHandleHeight:e.dragHandleHeight??100,onClose:e.onClose??(()=>{}),onOpen:e.onOpen??(()=>{})},this.dragState={startY:0,currentY:0,isDragging:!1,pointerId:null},this.initialize()}initialize(){document.addEventListener("click",this.boundHandleDelegatedClick)}open(){this.isOpen||(this.isOpen=!0,document.body.style.opacity="0.5",document.body.style.overflow="hidden",document.body.style.pointerEvents="none",this.dialog.showModal(),this.options.onOpen(),requestAnimationFrame(()=>{this.addModalEventListeners()}))}close(){this.isOpen&&(this.isOpen=!1,document.body.removeAttribute("style"),this.dialog.close(),this.options.onClose(),requestAnimationFrame(()=>{this.removeModalEventListeners()}))}toggle(){this.isOpen?this.close():this.open()}handlePointerDown(t){if(!(t.target instanceof HTMLElement)||t.pointerType!=="touch"&&t.pointerType!=="mouse"||t.target.closest('button, input, select, textarea, [role="button"]'))return;let e=this.dialog.getBoundingClientRect(),i=t.clientY-e.top;i<0||i>this.options.dragHandleHeight||(this.dragState.startY=t.clientY,this.dragState.currentY=this.dragState.startY,this.dragState.isDragging=!0,this.dragState.pointerId=t.pointerId,this.dialog.setPointerCapture(t.pointerId),t.preventDefault())}handlePointerMove(t){if(!this.dragState.isDragging||t.pointerId!==this.dragState.pointerId)return;this.dragState.currentY=t.clientY;let e=this.dragState.currentY-this.dragState.startY;e>0&&requestAnimationFrame(()=>{this.dialog&&(this.dialog.style.transform=`translateY(${e}px)`)})}handlePointerEnd(){if(!this.dragState.isDragging)return;let t=this.dragState.currentY-this.dragState.startY;this.dialog.style.transform="",t>this.options.dragThreshold&&this.close(),this.dragState.isDragging=!1,this.dragState.pointerId=null}handleClickOutside(t){this.dialog.contains(t.target)||this.close()}handleEscKey(t){t.key==="Escape"&&this.close()}handleDelegatedClick(t){t.target.closest(this.options.targetAttribute)&&(t.preventDefault(),this.toggle())}addModalEventListeners(){document.addEventListener("click",this.boundHandleClickOutside),document.addEventListener("keydown",this.boundHandleEscKey),this.dialog.addEventListener("pointerdown",this.boundHandlePointerDown),this.dialog.addEventListener("pointermove",this.boundHandlePointerMove),this.dialog.addEventListener("pointerup",this.boundHandlePointerEnd),this.dialog.addEventListener("pointercancel",this.boundHandlePointerEnd)}removeModalEventListeners(){document.removeEventListener("click",this.boundHandleClickOutside),document.removeEventListener("keydown",this.boundHandleEscKey),this.dialog.removeEventListener("pointerdown",this.boundHandlePointerDown),this.dialog.removeEventListener("pointermove",this.boundHandlePointerMove),this.dialog.removeEventListener("pointerup",this.boundHandlePointerEnd),this.dialog.removeEventListener("pointercancel",this.boundHandlePointerEnd)}destroy(){this.isOpen&&this.close(),document.removeEventListener("click",this.boundHandleDelegatedClick)}get state(){return this.isOpen}};export{n as ModalDialog};
