<div id='app__cookieconsent' data-layout='expand' data-visible='false'>
	<div data-is='grid'>
		<p>
			We use cookies to understand how you use the Lilycat docs. No ads, no
			tracking across sites. You can manage your cookie preferences anytime.
			<a href='/privacy/'>Privacy Policy</a>
		</p>

		<div data-is='grid'>
			<button data-variant='outline' data-toggle-cookieconsent>Accept</button>
			<button data-toggle-cookieconsent>Reject</button>
		</div>
	</div>

	<script type='module' is:inline>
		window.addEventListener('DOMContentLoaded', () => {
			const cookieconsent = document.querySelector('#app__cookieconsent');
			if (!cookieconsent) return;

			// Read from localStorage on load
			const isVisible = localStorage.getItem('cookieVisible') !== 'false';
			cookieconsent.dataset.visible = isVisible;

			const setVisibility = (visible) => {
				cookieconsent.dataset.visible = visible;
				localStorage.setItem('cookieVisible', visible ? 'true' : 'false');

				// Emit visibility change
				dispatchEvent(
					new CustomEvent('cookieconsent:visibility', {
						detail: { visible },
					})
				);
			};

			document.querySelectorAll('[data-toggle-cookieconsent]').forEach((el) =>
				el.addEventListener('click', () => {
					const nowVisible = cookieconsent.dataset.visible !== 'true';
					setVisibility(nowVisible);
				})
			);
		});
	</script>

	<style lang='css' is:inline>
		@scope (#app__cookieconsent) {
			:scope {
				background-color: var(--clr-background__base);
				border-top: solid 2px var(--clr-border__base);
				grid-row: bottom;
				height: max-content;
				inset: auto 0 -0.1px 0;
				margin-bottom: -0.1px;
				position: sticky;
				transition-property: opacity, position, transform, translate;
				transition-duration: var(--animDuration);
				transition-timing-function: var(--animTiming);
				z-index: 10;

				& > * {
					grid-column: inner;
					width: 100%;
				}

				& > [data-is='grid'] {
					--cols: 2;
					--gap: var(--space-nm);

					padding: var(--space-xl);
					place-items: safe center;
					width: 100%;

					& > [data-is='grid'] {
						--cols: 2;
						--gap: var(--space-sm);
						width: 100%;

						button {
							width: 100%;
						}
					}
				}

				&[data-visible='false'] {
					opacity: 0;
					pointer-events: none;
					position: fixed;
					transform: translateY(100%);
				}
			}
		}
	</style>
</div>
