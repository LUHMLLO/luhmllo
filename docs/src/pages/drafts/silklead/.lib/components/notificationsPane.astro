<aside id='silklead__notificationspane' data-visible='false'>
	<div
		data-is='row'
		style='padding-top: 2px; place-items: center; height: calc(var(--xl) * 2); gap: var(--xs); padding-inline: var(--sm);'>
		<p>Notifications</p>
		<button type='button' data-variant='ghost' data-toggle-notificationspanel>
			<i data-is='icon'>close_small</i>
		</button>
	</div>

	<label for='searchbar' data-is='input' style='border-radius: 0;'>
		<i data-is='icon' data-part='lead'> search </i>
		<input
			type='text'
			style='border-radius: 0;'
			name='searchbar'
			placeholder='Type in to filter list'
		/>
		<i data-is='icon' data-part='trail'> keyboard_command_key </i>
	</label>

	<script type='module' is:inline>
		window.addEventListener('DOMContentLoaded', () => {
			const panel = document.querySelector('#silklead__notificationspane');
			if (!panel) return;

			const setVisibility = (visible) => {
				panel.dataset.visible = visible;

				// Emit visibility change
				dispatchEvent(
					new CustomEvent('notificationspanel:visibility', {
						detail: { visible },
					})
				);
			};

			document
				.querySelectorAll('[data-toggle-notificationspanel]')
				.forEach((el) =>
					el.addEventListener('click', () => {
						const nowVisible = panel.dataset.visible !== 'true';
						setVisibility(nowVisible);
					})
				);
		});
	</script>

	<style lang='css' is:inline>
		@scope (#silklead__notificationspane) {
			:scope {
				background-color: var(--clr-background__base);
				height: max(0%, calc(100% + 4px));
				inset: -2px -2px -2px 0;
				margin: 0 0 auto auto;
				outline: solid 2px var(--clr-border__base);
				outline-offset: -2px;
				overflow: clip;
				position: absolute;
				transform: translateX(0%);
				transition-property: opacity, transform;
				transition-duration: var(--animDuration);
				transition-timing-function: var(--animTiming);
				width: min(100%, 440px);
				z-index: 5;

				&[data-visible='false'] {
					opacity: 0;
					position: fixed;
					transform: translateX(100%);
				}

				:where(.icon:hover) {
					--opsz: 25;
				}
			}
		}
	</style>
</aside>
