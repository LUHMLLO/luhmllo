---
import ShowcaseLayout from '@layouts/showcase.astro';
---

<ShowcaseLayout>
	<script type='module' is:inline>
		document.addEventListener('DOMContentLoaded', () => {
			const button = document.getElementById('menu-button');
			const dialog = document.getElementById('drawer');

			if (button && dialog instanceof HTMLDialogElement) {
				button.addEventListener('click', () => {
					dialog.open ? dialog.close() : dialog.show();
				});
			}
		});
	</script>

	<main>
		<x-stack id='navigation'>
			<nav id='rail'>
				<a href='#'>
					<i data-is='icon' style='--fill: 1;'> asterisk </i>
				</a>
				<x-flex id='menu-icons'>
					<a href='#'>
						<i data-is='icon'> search </i>
					</a>
					<a href='#'>
						<i data-is='icon'> co_present </i>
					</a>
					<a href='#'>
						<i data-is='icon'> docs </i>
					</a>
					<a href='#'>
						<i data-is='icon'> smart_display </i>
					</a>
					<button id='menu-button' style='display: contents;'>
						<i data-is='icon'> menu </i>
					</button>
				</x-flex>
			</nav>

			<dialog id='drawer'>
				<span>label</span>
				<x-flex data-is='input'>
					<i data-is='icon' data-part='lead'> search </i>
					<input type='text' placeholder='search' />
					<i data-is='icon' data-part='trail'> keyboard_command_key </i>
				</x-flex>
				<hr />
				<span>label</span>
				<a href='#'>
					<i data-is='icon'> home </i>
					<span>home</span>
				</a>
				<a href='#'>
					<i data-is='icon'> home </i>
					<span>home</span>
				</a>
				<a href='#'>
					<i data-is='icon'> home </i>
					<span>home</span>
				</a>
				<a href='#'>
					<i data-is='icon'> home </i>
					<span>home</span>
				</a>
				<hr />
				<span>label</span>
				<a href='#'>
					<i data-is='icon'> home </i>
					<span>home</span>
				</a>
				<a href='#'>
					<i data-is='icon'> home </i>
					<span>home</span>
				</a>
			</dialog>
		</x-stack>

		<x-stack>
			<h1>hello world</h1>
			<p>
				Lorem ipsum dolor sit amet consectetur, adipisicing elit. Numquam
				inventore, quasi corporis ad amet a, architecto hic doloremque illo
				error voluptatum eum. Alias neque nesciunt, incidunt ullam voluptas
				officia ex.
			</p>
		</x-stack>
	</main>

	<style lang='css' is:inline>
		@scope {
			:scope {
				main {
					display: flex;
					flex-direction: column-reverse;
					gap: var(--space-md);
					height: 100%;
					overflow: clip;
					padding: var(--space-md);

					& > * {
						flex-shrink: 0;
					}

					@container app (width > 512px) {
						flex-direction: row;
					}
				}

				#navigation {
					align-items: center;
					flex-direction: column-reverse;
					flex-shrink: 0;
					gap: var(--space-md);

					@container app (width > 512px) {
						flex-direction: row;
					}

					#rail {
						align-items: inherit;
						background-color: var(--clr-background__raised);
						border-radius: var(--space-xs);
						flex-shrink: 0;
						gap: inherit;
						height: calc(50 * 0.0625rem);
						overflow: clip;
						padding: var(--space-md);
						width: 100%;

						@container app (width > 512px) {
							flex-direction: column;
							height: 100%;
							width: calc(50 * 0.0625rem);
						}

						#logo {
							aspect-ratio: 1/1;
							flex-shrink: 1;
							height: calc(20 * 0.0625rem);
							width: calc(20 * 0.0625rem);
						}

						#menu-icons {
							align-items: inherit;
							flex-grow: 1;
							flex-wrap: nowrap;
							gap: var(--space-md);
							place-content: end;

							@container app (width > 512px) {
								flex-direction: column;
							}

							:where(a:not(:hover, :focus, :active)) {
								color: inherit;
							}
						}
					}

					#drawer {
						background-color: var(--clr-background__raised);
						border-radius: var(--space-xs);
						flex-direction: column;
						gap: var(--space-md);
						inset: auto 0 calc(50px + var(--space-md)) 0;
						margin: var(--space-md);
						max-height: calc(100% - calc(var(--space-md) * 2) - 50px - 15px);
						max-width: calc(100% - calc(var(--space-md) * 2));
						min-height: 0;
						min-width: 0;
						outline: none;
						overflow: auto;
						padding: var(--space-md);
						place-content: space-between;
						width: 100%;

						&[open] {
							display: flex;
						}

						@container app (width > 512px) {
							height: 100%;
							inset: 0 0 0 calc(50px + var(--space-md));
							max-height: calc(100% - calc(var(--space-md) * 2));
							place-content: start;
							width: min(300px, 100%);
						}

						> * {
							flex-shrink: 0;
						}

						a {
							align-items: center;
							display: flex;
							gap: var(--space-xs);
							width: 100%;

							&:where(:not(:hover, :focus, :active)) {
								color: inherit;
							}

							span {
								flex-grow: 1;
							}
						}
					}
				}
			}
		}
	</style>
</ShowcaseLayout>
